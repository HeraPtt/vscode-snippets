{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"If Statement": {
		"scope": "c, cpp, java, javascript",
		"prefix": "if",
		"body": [
			"if (${1:condition}) {",
			"\t$2",
			"} $0"
		],
		"description": "If Statement"
	},
	"else statement": {
		"scope": "c, cpp, java, javascript",
		"prefix": "el",
		"body": "else {\n\t${1}\n}$0"
	},
	"else if statement": {
		"scope": "c, cpp, java, javascript",
		"prefix": "elif",
		"body": "else if (${1:condition}) {\n\t${2}\n}$0"
	},
	"Switch Statement": {
		"scope": "c, cpp, java, javascript",
		"prefix": "switch",
		"body": [
			"switch (${1:key}) {",
			"case ${2:value}: {",
			"\t$3",
			"} break;$0",
			"default:",
			"\tbreak;",
			"}"
		],
		"description": "Switch Statement"
	},
	"Case": {
		"scope": "c, cpp, java, javascript",
		"prefix": "case",
		"body": [
			"case ${1:value}: {",
			"\t$2",
			"} break;${0}"
		],
		"description": "Switch Statement"
	},
	"While Statement": {
		"scope": "c, cpp, java, javascript",
		"prefix": "while",
		"body": [
			"${1:bool} flag = ${2:true};",
			"while (flag) {",
			"\t$0",
			"}"
		],
		"description": "While Statement"
	},
	"Do-While Statement": {
		"scope": "c, cpp, java, javascript",
		"prefix": "dowhile",
		"body": [
			"do {",
			"\t$0",
			"} while (${1:condition});"
		],
		"description": "Do-While Statement"
	},
	"For Loop": {
		"scope": "c, cpp, java, javascript",
		"prefix": "fori",
		"body": [
			"for (int ${1:i} = ${2:0}; ${1:i} <${4:=} ${3:num}; ${1:i}++) {",
			"\t$5",
			"}$0"
		],
		"description": "For Loop"
	},
	"For Loop arr": {
		"scope": "c, cpp, java, javascript",
		"prefix": "forarr",
		"body": [
			"for (int ${1:i} = 0; ${1:i} < ${2:arr}.length; ${1:i}++) {",
			"\t$4 ${3:e} = ${2:arr}[${1:i}];",
			"\t$0",
			"}"
		],
		"description": "For Loop: array"
	}
}